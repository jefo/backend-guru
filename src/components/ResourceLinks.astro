---
interface Resource {
  title: string;
  url: string;
  description?: string;
  type: "article" | "video" | "book" | "repo" | "talk" | "course" | "tool";
}

interface Props {
  title?: string;
  resources: Resource[];
}

const { title = "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã", resources } = Astro.props;

// –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø–æ —Ç–∏–ø—É
const groupedResources = resources.reduce(
  (acc, resource) => {
    if (!acc[resource.type]) {
      acc[resource.type] = [];
    }
    acc[resource.type].push(resource);
    return acc;
  },
  {} as Record<string, Resource[]>,
);

// –ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∏–ø–æ–≤
const typeOrder: string[] = [
  "article",
  "video",
  "book",
  "talk",
  "course",
  "repo",
  "tool",
];

// –ù–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
const typeLabels: Record<string, string> = {
  article: "–°—Ç–∞—Ç—å–∏",
  video: "–í–∏–¥–µ–æ",
  book: "–ö–Ω–∏–≥–∏",
  repo: "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏",
  talk: "–î–æ–∫–ª–∞–¥—ã",
  course: "–ö—É—Ä—Å—ã",
  tool: "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
};

// –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Ç–∏–ø–æ–≤
const typeIcons: Record<string, string> = {
  article: "üìÑ",
  video: "üé¨",
  book: "üìö",
  repo: "üíª",
  talk: "üé§",
  course: "üéì",
  tool: "üîß",
};
---

<div class="resource-links">
  <h3 class="resources-title">{title}</h3>

  {
    typeOrder
      .filter((type) => groupedResources[type]?.length > 0)
      .map((type) => (
        <div class="resource-category">
          <h4 class="category-title">
            {typeIcons[type]} {typeLabels[type]}
          </h4>
          <ul class="resource-list">
            {groupedResources[type].map((resource) => (
              <li class="resource-item">
                <a
                  href={resource.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="resource-link"
                >
                  <span class="resource-title">{resource.title}</span>
                  {resource.description && (
                    <span class="resource-description">
                      {resource.description}
                    </span>
                  )}
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))
  }
</div>

<style>
  .resource-links {
    margin: 2rem 0;
    padding: 1.5rem;
    background-color: #f8f9fa;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  }

  .resources-title {
    margin-top: 0;
    margin-bottom: 1.5rem;
    font-size: 1.5rem;
    color: #333;
    border-bottom: 2px solid #e9ecef;
    padding-bottom: 0.5rem;
  }

  .resource-category {
    margin-bottom: 1.5rem;
  }

  .category-title {
    font-size: 1.2rem;
    margin-bottom: 0.75rem;
    color: #444;
  }

  .resource-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .resource-item {
    margin-bottom: 0.75rem;
  }

  .resource-link {
    display: block;
    padding: 0.75rem;
    background-color: white;
    border-radius: 6px;
    text-decoration: none;
    color: inherit;
    transition:
      transform 0.2s,
      box-shadow 0.2s;
    border: 1px solid #e9ecef;
  }

  .resource-link:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    border-color: #4a6cf7;
  }

  .resource-title {
    display: block;
    font-weight: 600;
    color: #4a6cf7;
    margin-bottom: 0.25rem;
  }

  .resource-description {
    display: block;
    font-size: 0.9rem;
    color: #6c757d;
  }

  @media (prefers-color-scheme: dark) {
    .resource-links {
      background-color: #1e1e2e;
    }

    .resources-title {
      color: #e0e0e0;
      border-bottom-color: #333;
    }

    .category-title {
      color: #ccc;
    }

    .resource-link {
      background-color: #252836;
      border-color: #333;
    }

    .resource-description {
      color: #aaa;
    }
  }
</style>
