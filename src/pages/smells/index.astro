---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Get all smells entries
const smellsEntries = await getCollection('smells');

// Sort entries by order or severity
const sortedEntries = smellsEntries.sort((a, b) => {
  // First try to sort by order
  if (a.data.order !== undefined && b.data.order !== undefined) {
    return a.data.order - b.data.order;
  }

  // If order is not available, sort by severity (high to low)
  const severityOrder = { high: 0, medium: 1, low: 2 };
  const aOrder = a.data.severity ? severityOrder[a.data.severity] : 999;
  const bOrder = b.data.severity ? severityOrder[b.data.severity] : 999;
  return aOrder - bOrder;
});

// Group by severity
const highSeverity = sortedEntries.filter(entry => entry.data.severity === 'high');
const mediumSeverity = sortedEntries.filter(entry => entry.data.severity === 'medium');
const lowSeverity = sortedEntries.filter(entry => entry.data.severity === 'low');
const uncategorized = sortedEntries.filter(entry => !entry.data.severity);
---

<Layout title="Архитектурные Запахи - Архитектурный Гуру">
  <main>
    <h1>Архитектурные Запахи</h1>
    <p class="description">
      Архитектурные запахи — это признаки проблем в архитектуре программного обеспечения,
      которые могут негативно влиять на качество, поддерживаемость и масштабируемость системы.
      Понимание этих запахов помогает выявлять и устранять потенциальные проблемы до того,
      как они перерастут в серьезные технические долги.
    </p>

    {highSeverity.length > 0 && (
      <section class="category severity-high">
        <h2>Высокая критичность</h2>
        <p>Эти архитектурные запахи требуют немедленного внимания, так как они значительно влияют на качество системы.</p>
        <div class="card-grid">
          {highSeverity.map(entry => (
            <a href={`/smells/${entry.slug}`} class="card">
              <div class="card-header">
                <h3>{entry.data.title}</h3>
                <span class="severity-badge high">Высокая</span>
              </div>
              <p>{entry.data.description}</p>
              {entry.data.solutions && entry.data.solutions.length > 0 && (
                <div class="solutions">
                  <span>Решения:</span>
                  <ul>
                    {entry.data.solutions.map(solution => (
                      <li><a href={`/ddd/${solution}`}>{solution}</a></li>
                    ))}
                  </ul>
                </div>
              )}
            </a>
          ))}
        </div>
      </section>
    )}

    {mediumSeverity.length > 0 && (
      <section class="category severity-medium">
        <h2>Средняя критичность</h2>
        <p>Эти запахи могут не требовать немедленного исправления, но их следует учитывать при планировании рефакторинга.</p>
        <div class="card-grid">
          {mediumSeverity.map(entry => (
            <a href={`/smells/${entry.slug}`} class="card">
              <div class="card-header">
                <h3>{entry.data.title}</h3>
                <span class="severity-badge medium">Средняя</span>
              </div>
              <p>{entry.data.description}</p>
              {entry.data.solutions && entry.data.solutions.length > 0 && (
                <div class="solutions">
                  <span>Решения:</span>
                  <ul>
                    {entry.data.solutions.map(solution => (
                      <li><a href={`/ddd/${solution}`}>{solution}</a></li>
                    ))}
                  </ul>
                </div>
              )}
            </a>
          ))}
        </div>
      </section>
    )}

    {lowSeverity.length > 0 && (
      <section class="category severity-low">
        <h2>Низкая критичность</h2>
        <p>Эти запахи обычно не вызывают серьезных проблем, но их устранение может улучшить качество кода.</p>
        <div class="card-grid">
          {lowSeverity.map(entry => (
            <a href={`/smells/${entry.slug}`} class="card">
              <div class="card-header">
                <h3>{entry.data.title}</h3>
                <span class="severity-badge low">Низкая</span>
              </div>
              <p>{entry.data.description}</p>
              {entry.data.solutions && entry.data.solutions.length > 0 && (
                <div class="solutions">
                  <span>Решения:</span>
                  <ul>
                    {entry.data.solutions.map(solution => (
                      <li><a href={`/ddd/${solution}`}>{solution}</a></li>
                    ))}
                  </ul>
                </div>
              )}
            </a>
          ))}
        </div>
      </section>
    )}

    {uncategorized.length > 0 && (
      <section class="category">
        <h2>Другие архитектурные запахи</h2>
        <div class="card-grid">
          {uncategorized.map(entry => (
            <a href={`/smells/${entry.slug}`} class="card">
              <div class="card-header">
                <h3>{entry.data.title}</h3>
              </div>
              <p>{entry.data.description}</p>
              {entry.data.solutions && entry.data.solutions.length > 0 && (
                <div class="solutions">
                  <span>Решения:</span>
                  <ul>
                    {entry.data.solutions.map(solution => (
                      <li><a href={`/ddd/${solution}`}>{solution}</a></li>
                    ))}
                  </ul>
                </div>
              )}
            </a>
          ))}
        </div>
      </section>
    )}
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    max-width: 1200px;
  }

  .description {
    font-size: 1.2rem;
    margin-bottom: 2rem;
  }

  .category {
    margin-bottom: 3rem;
  }

  .card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-top: 1rem;
  }

  .card {
    border: 1px solid #eaeaea;
    border-radius: 8px;
    padding: 1.5rem;
    text-decoration: none;
    color: inherit;
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
  }

  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 0.5rem;
  }

  .card h3 {
    margin-top: 0;
    font-size: 1.25rem;
    margin-right: 0.5rem;
  }

  .card p {
    color: #666;
  }

  .severity-badge {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: bold;
    color: white;
  }

  .severity-badge.high {
    background-color: #e53935;
  }

  .severity-badge.medium {
    background-color: #fb8c00;
  }

  .severity-badge.low {
    background-color: #43a047;
  }

  .solutions {
    margin-top: 1rem;
    font-size: 0.9rem;
  }

  .solutions span {
    font-weight: bold;
  }

  .solutions ul {
    margin: 0.5rem 0 0 0;
    padding-left: 1.5rem;
  }

  .solutions a {
    color: #0066cc;
    text-decoration: underline;
  }

  .severity-high h2 {
    color: #c62828;
  }

  .severity-medium h2 {
    color: #ef6c00;
  }

  .severity-low h2 {
    color: #2e7d32;
  }
</style>
